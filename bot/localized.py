from aiogram.types import (KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove,
                           InlineKeyboardMarkup, InlineKeyboardButton)


class Localized:
    """
    test
    """
    def __init__(self):
        self.buttons = {
            'ru': {
                "button_comment": [
                    KeyboardButton('–Ω–µ—Ç —Ç–∏–∫–µ—Ç–æ–≤'),
                    KeyboardButton('–Ω–µ—Ç —Å–º–µ–Ω'),
                    KeyboardButton('—É–≤–æ–ª–µ–Ω'),
                    KeyboardButton('–±–æ–ª—å–Ω–∏—á–Ω—ã–π'),
                    KeyboardButton('–æ—Ç–ø—É—Å–∫/–æ–±—Å'),
                ],
                'get_task_butt': [
                    KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ')
                ],
                'button_cancel': [
                    KeyboardButton('–û—Ç–º–µ–Ω–∞')
                ],
                "button_change": [
                    InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='change')
                ],
                "admin_button": [
                    KeyboardButton('–û–±–Ω–æ–≤–∏—Ç—å –Ω–∞–≤—ã–∫–∏'),
                    KeyboardButton('–û–±–Ω–æ–≤–∏—Ç—å –∞–¥–º–∏–Ω–æ–≤'),
                    KeyboardButton('–û–±–Ω–æ–≤–∏—Ç—å –∞—É–¥–∏—Ç–æ—Ä–æ–≤'),
                    KeyboardButton('–°–ø–∏—Å–æ–∫ –∞—É–¥–∏—Ç–æ—Ä–æ–≤'),
                    KeyboardButton('–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç'),
                    KeyboardButton('–í—ã–≥—Ä—É–∑–∫–∞'),
                    KeyboardButton('–õ–æ–≥–∏'),
                ]
            },
            'en': {
                "button_comment": [
                    KeyboardButton('No Tickets'),
                    KeyboardButton('No Shifts'),
                    KeyboardButton('Fired'),
                    KeyboardButton('Sick Leave'),
                    KeyboardButton('Vacation/OBS'),
                ],
                'get_task_butt': [
                    KeyboardButton('Get Task')
                ],
                'button_cancel': [
                    KeyboardButton('Cancel')
                ],
                "button_change": [
                    InlineKeyboardButton(text='Change', callback_data='change')
                ],
                "admin_button": [
                    KeyboardButton('Update Skills'),
                    KeyboardButton('Update Admins'),
                    KeyboardButton('Update Auditors'),
                    KeyboardButton('List of Auditors'),
                    KeyboardButton('Priority'),
                    KeyboardButton('Unload'),
                    KeyboardButton('Logs'),
                ]
            }
        }
        self.messages = {
            "ru": {
                "hello": "–ü—Ä–∏–≤–µ—Ç",
                "count_tickets": "–í–≤–µ–¥–∏ –∫–æ–ª-–≤–æ –æ—Ü–µ–Ω—ë–Ω–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤:",
                "comment": "‚ö†–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∞–≥–µ–Ω—Ç—É‚ö†:",
                "waiting": "‚è±–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ.....",
                "count_rec": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∞–Ω–æ‚úÖ",
                "error_int": "–û—Ç–≤–µ—Ç –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!!!",
                "comment_rec": "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∑–∞–ø–∏—Å–∞–Ω‚úÖ",
                "change_count": "–í–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ —Ç–∏–∫–µ—Ç–æ–≤ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                "info_old_task": "–ó–∞–¥–∞—á–∞ —É—Å—Ç–∞—Ä–µ–ª–∞. –û–±—Ä–∞—Ç–∏—Å—å –∫ –†–ì –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—èüë®üèæ‚Äçü¶≥",
                "waiting_change": "–í—ã—á–∏—Å–ª—è—é...ü§ñ",
                "info_empty_entry": "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –†–ì",
                "info_error_entry": "–ü—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–¥–Ω–µ–µ",
                "success_change": "–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω—ã‚úÖ",
                "reset_change": "–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ãüôÖ",
                "wrong_count_ticket": "‚ùå–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–æ–ª-–≤–æ —Ç–∏–∫–µ—Ç–æ–≤ –∏ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –∑–∞–Ω–æ–≤–æ",
                "unloading_wait": "‚è±–í—ã–≥—Ä—É–∑–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ.....",
                "success_unloading": "–í—ã–≥—Ä—É–∑–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞‚úÖ",
                "send_login": "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–ø–∏—Å–æ–∫ –ª–æ–≥–∏–Ω–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\ntest\ntest2\ntest3",
                "result_prior": "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞:",
                "update_db": "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞‚úÖ",
                "update_db_root": "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∞‚úÖ",
                "get_oc": "–∑–∞–±—Ä–∞–ª –û–°‚úÖ",
                "wrong_add_task": "–û—à–∏–±–∫–∞! –û—Ç—á–µ—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º",
                "wrong_date_task": "–û—à–∏–±–∫–∞! –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É –≤ 4 —Å—Ç—Ä–æ–∫–µ."
            },

            "en": {
                "hello": "Hi",
                "count tickets": "Enter the number of assessed tickets:",
                "comment": "‚ö†Write a comment to the agent‚ö†:",
                "waiting": "‚è±Please wait.....",
                "count_rec": "Count recorded‚úÖ",
                "error_int": "Response must contain an integer!!!",
                "comment_rec": "Comment recorded‚úÖ",
                "change_count": "Enter the number of tickets to correct",
                "info_old_task": "The task is outdated. Contact RG for correctionüë®üèæ‚Äçü¶≥",
                "waiting_change": "Calculating...ü§ñ",
                "info_empty_entry": "No entry found in the table. Contact RG",
                "info_error_entry": "An error occurred while writing. Please try again later",
                "success_change": "Changes successfully made‚úÖ",
                "reset_change": "Changes canceledüôÖ",
                "wrong_count_ticket": "‚ùåCheck the correctness of the ticket count and enter it again",
                "unloading_wait": "‚è±Unloading. Please wait.....",
                "success_unloading": "Unloading updated‚úÖ",
                "send_login": "Send me a list of logins in the format:\ntest\ntest2\ntest3",
                "result_prior": "Priority update results:",
                "update_db": "Database updated‚úÖ",
                "update_db_root": "Administrators database updated‚úÖ",
                "get_oc": "picked up OC‚úÖ",
                "wrong_add_task": "Error! Report does not meet requirements",
                "wrong_date_task": "Error! Incorrect date format. Please specify the date in the 4th line."
            }
        }

    def get_keyboard(self, keyboard_key: str, current_lang: str):
        """
        Get keyboard object based on the current language setting
        """
        lang_code = current_lang
        if lang_code in self.buttons and keyboard_key in self.buttons[lang_code]:
            if keyboard_key == "admin_button":
                keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
                admin_buttons = self.buttons[lang_code][keyboard_key]
                keyboard.add(admin_buttons[0]).insert(admin_buttons[1])
                keyboard.add(admin_buttons[2]).insert(admin_buttons[3])
                keyboard.add(admin_buttons[4]).add(admin_buttons[5]).add(admin_buttons[6])
            elif keyboard_key == "button_change":
                keyboard = InlineKeyboardMarkup(row_width=4)
                keyboard.add(*self.buttons[lang_code][keyboard_key])
            else:
                keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
                keyboard.add(*self.buttons[lang_code][keyboard_key])
        else:
            keyboard = None

        return keyboard

    def get_message(self, message_key: str, current_lang: str):
        """
        Get message object based on the current language setting
        """
        lang_code = current_lang
        if lang_code in self.messages and message_key in self.messages[lang_code]:
            return self.messages[lang_code][message_key]

        return "Empty message"
